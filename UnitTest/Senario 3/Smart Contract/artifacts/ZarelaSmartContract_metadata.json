{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_clock",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "labrotory",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "mage",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "difficulty",
						"type": "uint256"
					}
				],
				"name": "contributed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "orderFinished",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "orderRegistered",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "Categories",
				"outputs": [
					{
						"internalType": "string",
						"name": "zarelaCategory",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "businessCategory",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bankBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burnFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "burnedTokensPerDay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "clock",
				"outputs": [
					{
						"internalType": "contract IClock",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_orderId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_index",
						"type": "uint256[]"
					}
				],
				"name": "confirmContributor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_orderId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_contributorAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_laboratoryAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_orderOwner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_ipfsHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_encryptionKey",
						"type": "string"
					}
				],
				"name": "contribute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "countDown24Hours",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dailyBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dailyContributionsCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dailyRewardPerContributor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dayCounterOf20Months",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dayOfTokenBurning",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_orderId",
						"type": "uint256"
					}
				],
				"name": "getOrderData",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "bool[]",
						"name": "",
						"type": "bool[]"
					},
					{
						"internalType": "bool[]",
						"name": "",
						"type": "bool[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "halvingCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "indexCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "indexOfAddressPendingReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "indexOfZeroDailyTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isZarelaEnd",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastRewardableIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxUserDailyReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orderDataMap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "orderResult",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "_ownedOrders",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_contributedOrders",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "orderSize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orders",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "orderTitle",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "orderOwner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenPerContributor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenPerLaboratory",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalContributors",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "zPaper",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "totalContributorsRemain",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "countOfRegisteredContributions",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "registrationTime",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "accessPublicKey",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_orderId",
						"type": "uint256"
					}
				],
				"name": "ownerSpecificData",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					},
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paymentDay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "paymentQueue",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "remainedDailyTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_orderTitle",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_zPaper",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_tokenPerContributor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenPerLaboratory",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_totalContributors",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_zarelaCategory",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_businessCategory",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_accessPublicKey",
						"type": "string"
					}
				],
				"name": "submitNewRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "todayContributionsCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalTokenReleaseDaily",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userMap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "tokenGainedFromSC",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenGainedFromMages",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "zarelaDayCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "zarelaDifficultyOfDay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Zarela Team ",
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
				},
				"approve(address,uint256)": {
					"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
				},
				"balanceOf(address)": {
					"details": "Returns the amount of tokens owned by `account`."
				},
				"confirmContributor(uint256,uint256[])": {
					"details": "Confirm the signals sent by angels only by Requester (Mage) of that signal. The selection of files is based on their index."
				},
				"contribute(uint256,address,address,address,string,string)": {
					"details": "Send the angel signal to mage and save then signal IPFS Hash in the block.Also, due to the difficulty of the Zarela network, each user pays the Reward to a number of people in the non-Reward queue"
				},
				"getOrderData(uint256)": {
					"details": "retrieves the value of each the specefic order by `_orderId`",
					"returns": {
						"_0": "the contributors addresses , Time to send that signal by the angel , Status (true , false) of confirmation , Zarela day sent that signal"
					}
				},
				"orderResult()": {
					"details": "Check the orders registered and contributed by the user (angel or mage) who calls the function",
					"returns": {
						"_ownedOrders": "and _contributedOrders"
					}
				},
				"orderSize()": {
					"details": "Total number of orders registered in Zarela",
					"returns": {
						"_0": "length of all orders that registered in zarela"
					}
				},
				"ownerSpecificData(uint256)": {
					"details": "Receive angels' signals by entering the orderId and just order's owner can access.",
					"returns": {
						"_0": "ipfsHash,encryptionKey"
					}
				},
				"submitNewRequest(string,string,string,uint256,uint256,uint256,string,uint256,string)": {
					"details": "make any kind of request that may be answered with a file.This function is only called by Mage "
				},
				"totalSupply()": {
					"details": "Returns the amount of tokens in existence."
				},
				"transfer(address,uint256)": {
					"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
				},
				"transferFrom(address,address,uint256)": {
					"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
				}
			},
			"title": "Decentralized marketplace platform for peer-to-peer transferring of Biosignals",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Zarela New version (for unit test)/ZarelaSmartContract.sol": "ZarelaSmartContract"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Zarela New version (for unit test)/Context.sol": {
			"keccak256": "0xa563161d1e419bcfc54e95d6ff021bc89dbd22844ed7ca8c52d7d53739e6420d",
			"license": "MIT",
			"urls": [
				"bzz-raw://aa618597728d983bc1a1d5d78678aefb13382796a21a3f0635ec4ccc13cdfe34",
				"dweb:/ipfs/QmV1eSXyr3x87FyLy9fz2jTMYTmWyrdqvW78umCFueYPJF"
			]
		},
		"Zarela New version (for unit test)/ERC20.sol": {
			"keccak256": "0x71b4e384c6fd189afaea0907eab217c0cce8f6c71cdffc7ce9efb8499f208d5f",
			"license": "MIT",
			"urls": [
				"bzz-raw://03e392c0cb0aa180fe40c27c2b1271c7cbc7963d0f0f25a2f27545e5b7fed52b",
				"dweb:/ipfs/QmeZjkFjxehBPFtfz44LbqFMYwzb8hLJRQYHsJ7jhf6H3T"
			]
		},
		"Zarela New version (for unit test)/ERC20Burnable.sol": {
			"keccak256": "0x23171fb0914ceb136d8b6016e3f6d9f3cefbdbb1e66f2bced7ea2c17d32f5811",
			"license": "MIT",
			"urls": [
				"bzz-raw://2ac04d7a54f4eec90eb9a87b2006b45664d07fea4979e6ea7cd965aa51f23c3a",
				"dweb:/ipfs/QmdZqgz8yFEjKTB2ehVBPCXjaHMaKVk6rDMTQZYJKXviRD"
			]
		},
		"Zarela New version (for unit test)/IClock.sol": {
			"keccak256": "0x5832bc3c263b51c9e50dbc0838501b910161c8cfeb3f8d01e4120066fec07c1d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://6c17a5ddd7e76d2b165e2f15b733c9343ec8d03ae3bba9cb85ee2204c928a0bc",
				"dweb:/ipfs/QmWUP2SQnBvxMEp3uW6tzJHPBxWHT6EPjRjKozpEHsN3iT"
			]
		},
		"Zarela New version (for unit test)/IERC20.sol": {
			"keccak256": "0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a",
			"license": "MIT",
			"urls": [
				"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c",
				"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv"
			]
		},
		"Zarela New version (for unit test)/SafeMath.sol": {
			"keccak256": "0x0053201fb905956718b86b86f768150705dc78b381256d56d7addd6c67cd9478",
			"license": "MIT",
			"urls": [
				"bzz-raw://ebad7ebfba3cac53e70f32116e6c49c7194fe99242d7d8dd6f9a02c8ba674e22",
				"dweb:/ipfs/QmUUv2tpkwJTTCVAy7MAnzNH4c378376g5Vyz6D4HTvkGP"
			]
		},
		"Zarela New version (for unit test)/ZarelaSmartContract.sol": {
			"keccak256": "0x0113f5e73520ce2d7ca7a915fb0b3c38be9d19b9e1e80982a5b265f5eb8817f1",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://17701cbbec88f992fcf3a012aa8ff72936d38372f795b46e3f1b8aed53d2d6fa",
				"dweb:/ipfs/QmQEosDRiS2H8NtcgnwAoMDLPzPcEwTctMgFPGJhaKVapU"
			]
		}
	},
	"version": 1
}